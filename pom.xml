<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ pom.xml
  ~
  ~ This work is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published
  ~ by the Free Software Foundation; either version 2 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This work is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  ~ USA
  ~
  ~ Copyright (c) 2010-2016 iTransformers Labs. All rights reserved.
  -->
<!-- This build is based on: https://phillipgreenii.github.io/running-npm-scripts-through-maven/-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.itransformers</groupId>
    <artifactId>netTransformerUI</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.test.skip>true</maven.test.skip>
        <npm.output.directory>build</npm.output.directory>
    </properties>

    <url>https://github.com/iTransformers/netTransformer-GUI</url>
    <issueManagement>
        <url>https://github.com/iTransformers/netTransformer-GUI/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <developers>
        <developer>
            <id>niau</id>
            <name>Nikolay Milovanov</name>
            <email>nmil itransformers dot net</email>
            <url>http://niau.org</url>
            <organization>iTransformers Labs</organization>
            <organizationUrl>http://itransformers.net</organizationUrl>
            <roles>
                <role>architect</role>
            </roles>
            <timezone>Europe/Sofia</timezone>
        </developer>
        <developer>
            <id>vasil-yordanov</id>
            <name>Vasil Yordanov</name>
            <email>vasil.yordanov gmail dot com</email>
            <organization>iTransformers Labs</organization>
            <organizationUrl>http://itransformers.net</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Sofia</timezone>
        </developer>
    </developers>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:ssh://git@github.com/iTransformers/netTransformer-GUI.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/iTransformers/netTransformer-GUI.git</developerConnection>
        <url>https://github.com/iTransformers/netTransformer-GUI.git</url>
        <tag>netTransformerUI-1.0</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>jfrogrepo</id>
            <name>jfrogrepo-releases</name>
            <url>http://build.itransformers.net:8081/artifactory/ext-release-local</url>
        </repository>
        <snapshotRepository>
            <id>jfrogrepo</id>
            <name>jfrogrepo-releases</name>
            <url>http://build.itransformers.net:8081/artifactory/ext-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <directory>${npm.output.directory}</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Default Lifecycle' -->
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Clean Lifecycle' -->
                    <execution>
                        <id>npm install (clean)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-clean</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Optional: The following will output the npm configuration.
                         I do this so my CI logs will show the npm information used
                             for the build -->
                    <execution>
                        <id>npm config list (validate)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>config</argument>
                                <argument>list</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Required: This following calls `npm run build` where 'build' is
                         the script name I used in my project, change this if yours is
                             different -->
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Optional: The following runs the script that copies the
                         appropriate files from the npm build directory into the location
                             'maven-war-plugin' is expecting.  The copying could be done
                             during the 'build' script, but I like to keep it separate.
                             Idealy in the future, I won't need maven at which, I can just
                             delete the 'prepare-for-maven-war' script. -->
                    <!--<execution>-->
                    <!--<id>npm run prepare-for-maven (prepare-package)</id>-->
                    <!--<goals>-->
                    <!--<goal>exec</goal>-->
                    <!--</goals>-->
                    <!--<phase>prepare-package</phase>-->
                    <!--<configuration>-->
                    <!--<executable>npm</executable>-->
                    <!--<arguments>-->
                    <!--<argument>run</argument>-->
                    <!--<argument>prepare-for-maven-war</argument>-->
                    <!--</arguments>-->
                    <!--</configuration>-->
                    <!--</execution>-->

                    <!-- Optional: The following will publish to npm if you run
                         `mvn deploy`. -->
                    <!--<execution>-->
                    <!--<id>npm run publish (deploy)</id>-->
                    <!--<goals>-->
                    <!--<goal>exec</goal>-->
                    <!--</goals>-->
                    <!--<phase>deploy</phase>-->
                    <!--<configuration>-->
                    <!--<executable>npm</executable>-->
                    <!--<arguments>-->
                    <!--<argument>publish</argument>-->
                    <!--</arguments>-->
                    <!--</configuration>-->
                    <!--</execution>-->

                    <!-- Required: The following will run unit tests.  My test scripts
                         in npm look for the property 'skipTests', so I map it to
                             'maven.test.skip'
                             Note: the douple '-' syntax used below only works with npm >= 2. -->
                    <!--<execution>-->
                    <!--<id>npm run test (test)</id>-->
                    <!--<goals>-->
                    <!--<goal>exec</goal>-->
                    <!--</goals>-->
                    <!--<phase>test</phase>-->
                    <!--<configuration>-->
                    <!--<executable>npm</executable>-->
                    <!--<arguments>-->
                    <!--<argument>run</argument>-->
                    <!--<argument>test</argument>-->
                    <!--<argument>&#45;&#45;</argument>-->
                    <!--<argument>&#45;&#45;skipTests=${maven.test.skip}</argument>-->
                    <!--</arguments>-->
                    <!--</configuration>-->
                    <!--</execution>-->

                    <!-- Required: The following calls the npm script that cleans
                         up the build. -->
                    <!--<execution>-->
                    <!--<id>npm run clean (clean)</id>-->
                    <!--<goals>-->
                    <!--<goal>exec</goal>-->
                    <!--</goals>-->
                    <!--<phase>clean</phase>-->
                    <!--<configuration>-->
                    <!--<executable>npm</executable>-->
                    <!--<arguments>-->
                    <!--<argument>run</argument>-->
                    <!--<argument>clean</argument>-->
                    <!--</arguments>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                </executions>

                <configuration>
                    <environmentVariables>
                        <!-- The following parameters create an NPM sandbox for CI -->
                        <NPM_CONFIG_PREFIX>${basedir}/npm</NPM_CONFIG_PREFIX>
                        <NPM_CONFIG_CACHE>${NPM_CONFIG_PREFIX}/cache</NPM_CONFIG_CACHE>
                        <NPM_CONFIG_TMP>${project.build.directory}/npmtmp</NPM_CONFIG_TMP>
                    </environmentVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>

                    <plugin>

                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.6</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.4</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
